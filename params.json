{"name":"Git Steps","tagline":"Collection of useful commands when using Git, GitHub and/or Gerrit","body":"# Welcome to GitSteps.com!\r\nThis is simply a collection of commands to help you get around [Git](http://git-scm.com/), [GitHub](https://github.com/) and/or [Gerrit](https://code.google.com/p/gerrit/). It's a single page, so your browser's \"Find\" command is your friend. [Pull requests](https://help.github.com/articles/using-pull-requests) are welcome at the [GitHub repo](https://github.com/JohnRiv/gitsteps).\r\n\r\nExcept for instances of \"HEAD\", anything in ALL CAPS should be substituted with the actual value.\r\n\r\n## General Git Steps\r\n\r\n### Goal: Stage all changes\r\ni.e. get ready to commit all outstanding changes (not including removed files)\r\n```\r\n$ git add .\r\n```\r\n\r\n### Goal: Save outstanding changes but don't commit them\r\nThis is useful if you want to merge in code from the remote repo or work in a different branch than you are currently in\r\n```\r\n$ git stash\r\n```\r\nand then when you're ready to bring those changes back in:\r\n```\r\n$ git stash pop\r\n```\r\n\r\n### Goal: I want to just type 'git push' instead of 'git push origin master'\r\nRun this command once from the root of your project:\r\n```\r\n$ git push -u origin master\r\n```\r\n\r\n### Goal: Stop this error when trying to pull from a remote origin:\r\n> You asked me to pull without telling me which branch you\r\n> want to merge with, and 'branch.master.merge' in\r\n> your configuration file does not tell me either.\r\n\r\nAdd this to your .git/config file for your project:\r\n```\r\n[branch \"master\"]\r\n  remote = origin \r\n  merge = refs/heads/master\r\n```\r\n\r\n### Goal: Search git logs\r\n```\r\n$ git log --grep=\"search term\"\r\n```\r\n\r\n### Goal: Blow away all local changes\r\n```\r\n$ git reset --hard HEAD\r\n```\r\n\r\n### Goal: Update to latest code from the remote origin\r\n```\r\n$ git pull\r\n```\r\n\r\n### Goal: Have 'git pull' do a rebase instead of a merge by default\r\nAdd this to your .git/config file for your project:\r\n```\r\n[pull]\r\n  rebase = true\r\n```\r\n\r\n### Goal: Get rid of the \"Your branch and 'origin/master' have diverged...\" status message\r\nIf you're really confident your code actually matches what is at the remote origin/master\r\n```\r\n$ git reset --hard origin/master\r\n```\r\n\r\n### Goal: Fix a merge conflict by accepting changes\r\nAccept changes on the remote server:\r\n```\r\n$ git checkout --theirs PATH_TO_FILE\r\n```\r\nAccept your changes:\r\n```\r\n$ git checkout --ours PATH_TO_FILE\r\n```\r\n\r\n### Goal: Merge in a specific commit from one branch to another\r\nIf you're really confident your code actually matches what is at the remote origin/master\r\n```\r\n$ git checkout BRANCH_NAME\r\n$ git cherry-pick SHA_HASH\r\n$ git push origin HEAD:refs/for/BRANCH_NAME\r\n```\r\n\r\n### Goal: Remove a bunch of files from Git\r\nFirst run this to make sure you'll be deleting the files you think you're deleting\r\n```\r\n$ git status | grep deleted | awk '{print $3}'\r\n```\r\nThis run this to actually execute git rm on each of them\r\n```\r\n$ git rm `git status | grep deleted | awk '{print $3}'`\r\n```\r\nAnd then commit & push those changes\r\n\r\n### Goal: Stats on number of commits by committer\r\n```\r\n$ git shortlog -sne --after=2013-07-01 --until=today\r\n```\r\n\r\n### Goal: Remove Edits Not Staged for Commit (permanently)\r\nFirst run this to make sure you'll be removing the changes you think you're removing\r\n```\r\n$ git status | grep modified | awk '{print $3}'\r\n```\r\nThis run this to actually blow away the changes in those files\r\n```\r\n$ git checkout -- `git status | grep modified | awk '{print$3}'`\r\n```\r\n\r\n### Goal: Edit the last commit\r\n```\r\n$ git commit --amend\r\n```\r\n\r\n### Goal: Undo the last commit\r\n```\r\n$ git reset --soft HEAD^\r\n```\r\n\r\n### Goal: Get rid of the last commit for good\r\n```\r\n$ git reset --hard HEAD~1\r\n```\r\n\r\n### Goal: Show remote repo URL:\r\n```\r\n$ git remote show origin\r\n```\r\n\r\n### Goal: Stats on number of commits by committer\r\n```\r\n$ git shortlog -sne --after=2013-07-01 --until=today\r\n```\r\n\r\n### Goal: Display git details in terminal\r\nCheck out [Trevor Menagh's .bashrc](https://github.com/trevmex/dotfiles/blob/master/.bashrc) to see how to have your terminal add details of the current branch, if there are any changes (marked by an \"*\"), and if you're in the middle of a rebase\r\n\r\n## GitHub Steps\r\n\r\n### Goal: Move an existing git repo to GitHub:\r\nFirst create a new repo at GitHub, then:\r\n```\r\n$ git clone SSH_CLONE_URL_FROM_GITHUB_REPO\r\n$ git remote rename origin upstream\r\n$ git remote add origin URL_TO_GITHUB_REPO\r\n$ git push origin master\r\n```\r\n\r\n### Goal: Undo a GitHub push:\r\n```\r\n$ git reset --hard SHA_HASH\r\n$ git push -f origin stable  \r\n```\r\n\r\n### Goal: Merge in code from originally forked repo:\r\nShort version:\r\n```\r\n$ git fetch upstream\r\n$ git merge upstream/master\r\n$ git push origin master\r\n```\r\nMuch more detailed version is available at GitHub Help: [Syncing a fork](https://help.github.com/articles/syncing-a-fork)\r\n\r\n## Gerrit Steps\r\n\r\n### Goal: I want to just type 'git p' instead of 'git push origin HEAD:refs/for/master'\r\nAdd this to your ~/.gitconfig\r\n```\r\n[alias]\r\n    p = push origin HEAD:refs/for/master\r\n```\r\n\r\n### Goal: Resolve a Gerrit conflict\r\n```\r\n$ git fetch COMMAND_FROM_GERRIT\r\n$ git fetch\r\n$ git rebase origin/master\r\n$ git status\r\n```\r\nThen go and fix the conflict(s) listed in status as unmerged\r\n```\r\n$ git add FILE_YOU_FIXED\r\n$ git rebase --continue\r\n$ git push origin HEAD:refs/for/master\r\n```\r\nYou may want to checkout these steps as well after resolving a conflict:\r\n* Restore your local git repo after reviewing a gerrit changeset\r\n* Get rid of the \"Your branch and 'origin/master' have diverged...\" status message\r\n\r\n### Goal: Restore your local git repo after reviewing a gerrit changeset:\r\n```\r\n$ git checkout master\r\n```\r\n\r\n### Goal: Rebase a commit that is dependent on an abandoned change:\r\n```\r\n$ git fetch origin\r\n$ git rebase origin/master -i\r\n$ git commit --amend\r\n$ git push origin HEAD:refs/for/master\r\n```\r\n\r\n### Goal: Fix SSL certificate problem error\r\nIf you get an error along these lines:\r\n> error: SSL certificate problem, verify that the CA cert is OK. Details:\r\n> error:14090086:SSL routines:SSL3_GET_SERVER_CERTIFICATE:certificate verify failed while accessing GERRIT_REPO\r\n> fatal: HTTP request failed\r\n\r\nRun this from the project root:\r\n```\r\n$ git config http.sslVerify \"false\"\r\n```\r\n","google":"UA-35632547-1","note":"Don't delete this file! It's used internally to help with page regeneration."}